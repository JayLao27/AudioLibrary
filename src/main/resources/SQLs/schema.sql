CREATE DATABASE IF NOT EXISTS AudioLibrary;

USE AudioLibrary;

CREATE TABLE IF NOT EXISTS User (
    userID INT AUTO_INCREMENT PRIMARY KEY,
    userName VARCHAR(100) NOT NULL UNIQUE,
    firstName VARCHAR(100),
    lastName VARCHAR(100),
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Artists (
    artistID INT AUTO_INCREMENT PRIMARY KEY,
    artistName VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Genre (
    genreID INT AUTO_INCREMENT PRIMARY KEY,
    genreName VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Albums (
    albumID INT AUTO_INCREMENT PRIMARY KEY,
    albumName VARCHAR(255) NOT NULL,
    artistID INT NOT NULL,
    FOREIGN KEY (artistID) REFERENCES Artists(artistID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Audio (
    audioID INT AUTO_INCREMENT PRIMARY KEY,
    audioName VARCHAR(255) NOT NULL,
    audioDuration TIME NOT NULL,
    audioPrice DECIMAL(10, 2) NOT NULL,
    artistID INT,
    albumID INT,
    genreID INT,
    FOREIGN KEY (artistID) REFERENCES Artists(artistID) ON DELETE SET NULL,
    FOREIGN KEY (albumID) REFERENCES Albums(albumID) ON DELETE SET NULL,
    FOREIGN KEY (genreID) REFERENCES Genre(genreID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS Library (
    libraryID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT NOT NULL UNIQUE,
    FOREIGN KEY (userID) REFERENCES User(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LibraryAudio (
    libraryID INT NOT NULL,
    audioID INT NOT NULL,
    PRIMARY KEY (libraryID, audioID),
    FOREIGN KEY (libraryID) REFERENCES Library(libraryID) ON DELETE CASCADE,
    FOREIGN KEY (audioID) REFERENCES Audio(audioID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Cart (
    cartID INT AUTO_INCREMENT PRIMARY KEY,
    userID INT NOT NULL UNIQUE,
    FOREIGN KEY (userID) REFERENCES User(userID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS CartAudio (
    cartID INT NOT NULL,
    audioID INT NOT NULL,
    PRIMARY KEY (cartID, audioID),
    FOREIGN KEY (cartID) REFERENCES Cart(cartID) ON DELETE CASCADE,
    FOREIGN KEY (audioID) REFERENCES Audio(audioID) ON DELETE CASCADE
);
